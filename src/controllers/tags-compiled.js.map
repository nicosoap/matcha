{"version":3,"sources":["tags.js"],"names":[],"mappings":"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","file":"tags-compiled.js","sourcesContent":["// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   user.js                                            :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: opichou <marvin@42.fr>                     +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2016/09/19 18:27:53 by opichou           #+#    #+#             //\n//   Updated: 2016/09/29 18:27:53 by opichou          ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport fs from 'fs'\nimport session from 'express-session'\nimport bcrypt from 'bcrypt-nodejs'\nimport * as dbl from \"./dbConnect\"\nimport credentials from '../credentials'\nimport mongodb from 'mongodb';\nimport jwt from 'jsonwebtoken'\nimport nodemailer from 'nodemailer'\nimport ERROR from './errno_code'\nimport match from '../model/match'\n\nlet saltRounds = 10\n\nlet transporter = nodemailer.createTransport('smtps://apimatcha@gmail.com:apiMatcha1212@smtp.gmail.com')\n\n\nfunction now(){\n    const currentDate = new Date();\n    return currentDate.getDate() + \"/\"+ (\"0\" + (currentDate.getMonth() + 1)).slice(-2)\n        + \"/\" + currentDate.getFullYear() + \" @ \"\n        + currentDate.getHours() + \":\"\n        + currentDate.getMinutes() + \":\" + currentDate.getSeconds()\n}\n\nfunction contains(a, obj) {\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport async function tags(req, res){\n    let db = await dbl.connect()\n    let response = await db.colletion('tags').find().sort({count: desc})\n    res.send({response})\n}\n\nexport async function addTag(req, res){\n    let tags = await req.body.tags\n    if (tags === ''){console.log({status: \"ok\", tagsCreated: 0})}\n    const db = await dbl.connect()\n    try{\n        let bulk = await db.collection('tags').initializeUnorderedBulkOp()\n        await tags.filter((n) => n != '').forEach(async(n) => {\n            bulk.find({label: n}).upsert().updateOne({$inc: {count: 1}})\n        })\n        const result = await bulk.execute({w:1})\n        console.error(result)\n    } finally {\n        db.close()\n    }\n}\n\nexport const viewAll = async (req, res) => {\n    const regexHashtag = /#([a-zA-Z0-9-]*)+/g,\n        regexNetflix = /netflix/i,\n        regexRightNow = /rightnow/i,\n        regexAge = /age-from=([0-9]{1,2}).*age-to=([0-9]{1,2})/i, //min = group1, max = group2\n        regexPopularity = /popularity-from=([0-9]{1,2}).*popularity-to=([0-9]{1,3})/i, //min = group1, max = group2\n        regexGeocode = /around-lat=([0-9]{1,2}\\.{0,1}[0-9]{0,16}).*around-lng=([0-9]{1,2}\\.{0,1}[0-9]{0,16})/i,//lat = group1, lng = group2\n        query = req.query.query,\n        netflix = regexNetflix.test(query),\n        rightnow = regexRightNow.test(query),\n        age = regexAge.exec(query),\n        popularity = regexPopularity.exec(query),\n        geocode = regexGeocode.exec(query)\n    let i = 0,\n        tags = []\n    while ((temp = regexHashtag.exec(query)) !== null) {\n        tags[i] = temp[1]\n        i++\n    }\n\n    res.send({message: \"User search is unavailable now\"})\n}"]}