{"version":3,"sources":["picture.js"],"names":[],"mappings":";;;;;;;;yDAuBA,iBAA+B,KAA/B,EAAsC,QAAtC,EAAgD,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,+BADR,GACkB,EAAC,MAAM,KAAP,EAAc,UAAU,QAAxB,EAAkC,KAAK,GAAvC,EAA4C,MAAM,KAAK,GAAL,EAAlD,EADlB;;AAEI,gCAAQ,GAAR,CAAY,OAAZ;AAFJ;AAAA,+BAGmB,IAAI,OAAJ,EAHnB;;AAAA;AAGQ,0BAHR;AAAA;AAAA;AAAA,+BAKqB,GAAG,UAAH,CAAc,UAAd,EAA0B,SAA1B,CAAoC,OAApC,CALrB;;AAAA;AAAA;;AAAA;AAAA;;AAOQ,2BAAG,KAAH;AAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,e;;;;;;0DAWR,kBAA6B,GAA7B,EAAkC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,gCAAQ,GAAR,CAAY,IAAI,IAAhB;AACM,6BAFH,GAEW,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAFX;AAGC,2BAHD,GAGO,IAAI,IAAJ,CAAS,YAHhB;;AAIH,gCAAQ,GAAR,CAAY,GAAZ;AACA,gCAAQ,GAAR,CAAY,IAAI,IAAJ,CAAS,QAArB;;AALG,8BAMC,MAAM,OAAN,CAAc,IAAI,IAAJ,CAAS,QAAvB,KAAoC,CAAC,CANtC;AAAA;AAAA;AAAA;;AAOC,8BAAM,IAAI,KAAJ,CAAU,gCAAV,EAA4C,CAA5C,CAAN;AACA,gCAAQ,GAAR,CAAY,GAAZ;AARD;AAAA,+BASsB,gBAAgB,IAAI,IAAJ,CAAS,QAAzB,EAAmC,IAAI,IAAJ,CAAS,QAA5C,EAAsD,GAAtD,CATtB;;AAAA;AASO,8BATP;;AAUC,4BAAI,OAAO,EAAX,EAAc;AACV,gCAAI,IAAJ,CAAS,EAAC,SAAS,IAAV,EAAgB,SAAS,qBAAM,sBAA/B,EAAT;AACH,yBAFD,MAEO;AACH,gCAAI,IAAJ,CAAS,EAAC,SAAS,KAAV,EAAiB,SAAS,qBAAM,sBAAhC,EAAT;AACH;AAdF;AAAA;;AAAA;AAgBC,4BAAI,IAAJ,CAAS,EAAC,SAAS,KAAV,EAAiB,SAAS,qBAAM,oBAAhC,EAAT;;AAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,a;;;;;AAtBtB;;;;AACA;;;;AACA;;;;AACA;;IAAY,G;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;ydArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"picture-compiled.js","sourcesContent":["// ************************************************************************** //\n//                                                                            //\n//                                                        :::      ::::::::   //\n//   picture.js                                            :+:      :+:    :+:   //\n//                                                    +:+ +:+         +:+     //\n//   By: opichou <marvin@42.fr>                     +#+  +:+       +#+        //\n//                                                +#+#+#+#+#+   +#+           //\n//   Created: 2016/09/19 18:27:53 by opichou           #+#    #+#             //\n//   Updated: 2016/09/29 18:27:53 by opichou          ###   ########.fr       //\n//                                                                            //\n// ************************************************************************** //\n\nimport fs from 'fs'\nimport session from 'express-session'\nimport bcrypt from 'bcrypt'\nimport * as dbl from \"./dbConnect\"\nimport credentials from '../credentials'\nimport mongodb from 'mongodb';\nimport jwt from 'jsonwebtoken'\nimport nodemailer from 'nodemailer'\nimport ERROR from './errno_code'\nimport match from '../model/match'\n\nasync function registerPicture(login, filename, ext){\n    let payload = {user: login, filename: filename, ext: ext, date: Date.now() }\n    console.log(payload)\n    let db = await dbl.connect()\n    try {\n        return await db.collection('pictures').insertOne(payload)\n    } finally {\n        db.close()\n    }\n}\n\nexport async function uploadPicture(req, res){\n    console.log(req.file)\n    const mimes = [\"image/jpeg\", \"image/gif\", \"image/png\"]\n    let ext = req.file.originalname\n    console.log(ext)\n    console.log(req.file.mimetype)\n    if (mimes.indexOf(req.file.mimetype) != -1){\n        ext = ext.match(/.*(\\.gif|\\.png|\\.jpg|\\.jpeg)$/i)[1]\n        console.log(ext)\n        const result = await registerPicture(req.user.username, req.file.filename, ext)\n        if (result.ok){\n            res.send({success: true, message: ERROR.PICTURE_UPLOAD_SUCCESS})\n        } else {\n            res.send({success: false, message: ERROR.PICTURE_REGISTER_ERROR})\n        }\n    }else{\n        res.send({success: false, message: ERROR.PICTURE_UPLOAD_ERROR})\n    }\n}"]}