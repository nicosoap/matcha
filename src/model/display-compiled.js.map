{"version":3,"sources":["display.js"],"names":[],"mappings":";;;;;;;AAIA;;IAAY,G;;;;2cAJZ;;;;AAMO,IAAM;AAAA,yDAAU,kBAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,0BADe,GACV,IAAI,OAAJ,EADU;AAAA;AAAA,+BAEF,GAAG,UAAH,CAAc,OAAd,EAAuB,OAAvB,CAA+B,EAAC,YAAD,EAAQ,QAAQ,IAAhB,EAA/B,CAFE;;AAAA;AAEf,4BAFe;;AAAA,6BAGf,IAHe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIX,iDAJW,GAIH,EAAC,QAAQ,IAAT,EAJG;;AAKf,kDAAM,eAAN,GAAyB,KAAK,MAAL,KAAgB,IAAzC;AACA,kDAAM,iBAAN,GAA2B,KAAK,MAAL,KAAgB,MAA3C;AACA,kDAAM,gBAAN,GAA0B,KAAK,MAAL,KAAgB,KAA1C;AACA,kDAAM,MAAN,GAAgB,KAAK,eAAL,GAAuB,MAAvB,GAAgC,KAAK,iBAAL,GAAwB,QAAxB,GAAkC,OAAlF;AARe;AAAA,mDASG,GAAG,UAAH,CAAc,QAAd,EAAwB,IAAxB,CAA6B,EAAC,KAAK,CAAC,EAAC,QAAQ,KAAT,EAAD,EAAkB,EAAC,SAAS,KAAV,EAAlB,CAAN,EAA7B,EAAyE,OAAzE,EATH;;AAAA;AASX,iDATW;AAAA;AAAA,mDAUG,GAAG,UAAH,CAAc,OAAd,EAAuB,IAAvB,CAA4B,EAAC,QAAQ,KAAT,EAA5B,EAA6C,OAA7C,EAVH;;AAAA;AAUX,iDAVW;AAAA;AAAA,mDAWM,GAAG,UAAH,CAAc,OAAd,EAAuB,IAAvB,CAA4B,EAAC,SAAS,KAAV,EAA5B,EAA8C,OAA9C,EAXN;;AAAA;AAWX,oDAXW;AAYX,uDAZW,GAYG,GAAG,UAAH,CAAc,YAAd,EAA4B,IAA5B,GAAmC,OAAnC,EAZH;AAaX,kDAbW,GAaF,EAbE;AAAA;AAAA,mDAcT,GAAG,UAAH,CAAc,OAAd,EAAuB,IAAvB,CAA4B,KAA5B,EAAmC,IAAnC,CAAwC,UAAC,GAAD,EAAM,GAAN,EAAc;AACxD,oDAAI,MAAM,MAAN,CAAa,aAAK;AAClB,2DAAS,EAAE,MAAF,KAAa,IAAI,KAAlB,IAA6B,EAAE,OAAF,KAAc,IAAI,KAAvD;AACH,iDAFG,EAED,MAFC,KAEU,CAFd,EAEiB;AACb,wDAAI,QAAO,GAAX;AACA,0DAAK,KAAL,GAAc,MAAM,MAAN,CAAa,aAAK;AAC5B,+DAAQ,EAAE,OAAF,KAAc,IAAI,KAA1B;AACH,qDAFa,CAAD,CAET,MAFS,GAEA,CAFb;AAGA,0DAAK,QAAL,GAAiB,SAAS,MAAT,CAAgB,aAAK;AAClC,+DAAQ,EAAE,MAAF,KAAa,IAAI,KAAzB;AACH,qDAFgB,CAAD,CAEZ,MAFY,GAEH,CAFb;AAGA,0DAAK,SAAL,GAAkB,YAAY,MAAZ,CAAmB,EAAC,OAAO,IAAI,KAAZ,EAAmB,kBAAnB,EAAnB,CAAlB;AAEH;AACJ,6CAdK,CAdS;;AAAA;;AA8Bf,sDAAU,IAAV,CAAe;AACX,yDAAS,IADE;AAEX,0DAFW;AAGX,uDAAO,CAAC,CAAC,KAHE;AAIX,0DAAU,CAAC,CAAC,QAJD;AAKX,2DAAW,WAAW,SALX;AAMX,gEAAgB,WAAW,IANhB;AAOX,yDAAS,CAAC,CAAC,OAPA;AAQX,4DAAY;AARD,6CAAf;;AA9Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"display-compiled.js","sourcesContent":["/**\n * Created by opichou on 11/3/16.\n */\n\nimport * as dbl from \"./dbConnect\"\n\nexport const suggest = async login => {\n    let db = dbl.connect()\n    let user = await db.collection('users').findOne({login, active: true})\n    if (user){\n        let query = {active: true}\n        query.attractedByMale = (user.gender === male)\n        query.attractedByFemale = (user.gender === female)\n        query.attractedByOther = (user.gender === other)\n        query.gender = (user.attractedByMale ? 'male' :(user.attractedByFemale? 'female': 'other'))\n        let blocs = await db.collection('blocks').find({$or: [{userId: login}, {otherId: login}]}).toArray()\n        let liked = await db.collection('likes').find({userId: login}).toArray()\n        let likes_me = await db.collection('likes').find({otherId: login}).toArray()\n        let connections = db.collection('conections').find().toarray()\n        let result = []\n        await db.collection('users').find(query).each((err, doc) => {\n            if (blocs.filter(e => {\n                return ((e.userId === doc.login) || (e.otherId === doc.login))\n            }).length === 0) {\n                let user = doc\n                user.liked = (liked.filter(e => {\n                    return (e.otherId === doc.login)\n                })).length > 0\n                user.likes_me = (likes_me.filter(e => {\n                    return (e.userId === doc.login)\n                })).length > 0\n                user.connected = (connections.filter({login: doc.login, conected}))\n\n            }\n        })\n\n        resultats.send({\n            success: true,\n            user,\n            liked: !!liked,\n            likes_me: !!likes_me,\n            connected: connection.connected,\n            lastConnection: connection.date,\n            visited: !!visited,\n            popularity: var_popularity\n        })\n    }\n}"]}