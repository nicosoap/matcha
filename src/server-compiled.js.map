{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["import express from 'express';\nimport formidable from 'formidable';\nimport fs from 'fs';\nimport parseurl from 'parseurl';\nimport bodyParser from 'body-parser';\nimport session from 'express-session';\nimport * as user from './controllers/user';\nimport userProfile from './controllers/userProfile';\nimport interactions from './controllers/interactions';\nimport credentials from './credentials';\n\nvar app = express();\n\n\napp.disable('X-Powerd-By');\n\napp.use(require('cookie-parser')(credentials.cookieSecret));\n\napp.use(session({\n    resave: false,\n    saveUninitialized: true,\n    secret: credentials.cookieSecret,\n\n}));\n\napp.set('port', process.env.PORT || 8081);\n\napp.use(express.static(__dirname + '/public'));\n\napp.use(bodyParser.json());\n\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\n\napp.get('/', function(req, res){\n    if(req.session.isLogedIn){\n        res.send('You are signed-in !');\n    } else {\n        res.redirect('/login');\n    }\n});\n\napp.post('/login', function(req, res) {\n    if(req.body.login && req.body.password) {\n        user.authenticate(req.body.login, req.body.password, function (err, ret) {\n            if (err) {\n                console.error(err);\n                res.send('You are not signed in.');\n            } else if (ret) {\n                res.send('You are signed-in');\n            } else {\n                res.send('You are not signed in.');\n            }\n        });\n    }\n    console.log(\"Authentication finished\");\n});\n\napp.get('/user', function(req, res){\n\n});\n\napp.get(\"/test/login/:login\", async (req, res, next) => {\n    try {\n        let test = await user.checkLogin(req.params.login);\n        res.setHeader('Content-Type', 'application/json');\n        res.send(JSON.stringify(test));\n    } catch(err) { next(err)}\n});\n\napp.get(\"/test/email/:email\", async (req, res, next) => {\n    try {\n        let test = await user.checkEmail(req.params.email);\n        res.setHeader('Content-Type', 'application/json');\n        res.send(JSON.stringify(test));\n    } catch(err) { next(err)}\n});\n\napp.use(function(req, res){\n    res.type('text/html');\n    res.status(404);\n    res.send('Error 404');\n});\n\napp.use(function(err, req, res){\n    console.error(err.stack);\n    res.status(500);\n    res.send('Error 500');\n});\n\napp.listen(app.get('port'), function(){\n    console.log('Express started on http://localhost:' + app.get('port') + ' press Ctrl-C to terminate');\n});"]}