{"version":3,"sources":["server.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAY,I;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAI,MAAM,wBAAV;;AAGA,IAAI,OAAJ,CAAY,aAAZ;AACA,IAAI,GAAJ,CAAQ,QAAQ,eAAR,EAAyB,sBAAY,YAArC,CAAR;AACA,IAAI,GAAJ,CAAQ,8BAAQ;AACZ,YAAQ,KADI;AAEZ,uBAAmB,IAFP;AAGZ,YAAQ,sBAAY;;AAHR,CAAR,CAAR;AAMA,IAAI,GAAJ,CAAQ,MAAR,EAAgB,QAAQ,GAAR,CAAY,IAAZ,IAAoB,IAApC;AACA,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,YAAY,SAA3B,CAAR;AACA,IAAI,GAAJ,CAAQ,qBAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,qBAAW,UAAX,CAAsB;AAC1B,cAAU;AADgB,CAAtB,CAAR;AAGA,IAAI,GAAJ,CAAQ,0BAAW,EAAC,QAAQ,sBAAY,SAArB,EAAX,EAA4C,MAA5C,CAAmD;AACvD,UAAM,CAAC,QAAD,EACF,oBADE,EAEF,mBAFE,EAGF,WAHE,EAIF,YAJE,EAKF,UALE,CADiD,EAAnD,CAAR;AAOA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAC,GAAD,EAAM,GAAN,EAAc;AACvB,QAAI,CAAC,IAAI,IAAT,EAAe,OAAO,IAAI,QAAJ,CAAa,QAAb,CAAP;AACf,QAAI,IAAJ,CAAS,kBAAT;AACH,CAHD;AAIA,IAAI,GAAJ,CAAQ,QAAR,EAAkB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC5B,QAAI,IAAJ,CAAS,YAAT;AACH,CAFD;AAGA,IAAI,IAAJ,CAAS,QAAT,EAAmB,KAAK,SAAxB;AACA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,KAAK,OAAtB;AACA,IAAI,IAAJ,CAAS,WAAT,EAAsB,KAAK,MAA3B;AACA,IAAI,GAAJ,CAAQ,WAAR,EAAqB,KAAK,UAA1B;AACA,IAAI,GAAJ,CAAQ,oBAAR,EAA8B,KAAK,UAAnC;AACA,IAAI,GAAJ,CAAQ,oBAAR,EAA8B,KAAK,UAAnC;AACA,IAAI,IAAJ,CAAS,kBAAT,EAA6B,KAAK,cAAlC;AACA,IAAI,IAAJ,CAAS,oBAAT,EAA+B,KAAK,gBAApC;AACA,IAAI,IAAJ,CAAS,mBAAT,EAA8B,KAAK,UAAnC;AACA,IAAI,IAAJ,CAAS,SAAT,EAAoB,KAAK,MAAzB;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,EAAyB;AAC7B,QAAI,IAAI,IAAJ,KAAa,mBAAjB,EAAsC;AAClC,YAAI,QAAJ,CAAa,QAAb;AACH;AACJ,CAJD;AAKA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAa;AACjB,QAAI,IAAJ,CAAS,WAAT;AACA,QAAI,MAAJ,CAAW,GAAX;AACA,QAAI,IAAJ,CAAS,WAAT;AACH,CAJD;AAKA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAkB;AACtB,YAAQ,KAAR,CAAc,IAAI,KAAlB;AACA,QAAI,MAAJ,CAAW,GAAX;AACA,QAAI,IAAJ,CAAS,WAAT;AACH,CAJD;AAKA,IAAI,MAAJ,CAAW,IAAI,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9B,YAAQ,GAAR,CAAY,yCAAyC,IAAI,GAAJ,CAAQ,MAAR,CAAzC,GAA2D,4BAAvE;AACH,CAFD","file":"server-compiled.js","sourcesContent":["import express from 'express';\nimport formidable from 'formidable';\nimport fs from 'fs';\nimport parseurl from 'parseurl';\nimport bodyParser from 'body-parser';\nimport session from 'express-session';\nimport * as user from './controllers/user';\nimport userProfile from './controllers/userProfile';\nimport interactions from './controllers/interactions';\nimport credentials from './credentials';\nimport jwt from 'jsonwebtoken';\nimport expressJWT from 'express-jwt';\n\nvar app = express();\n\n\napp.disable('X-Powerd-By');\napp.use(require('cookie-parser')(credentials.cookieSecret));\napp.use(session({\n    resave: false,\n    saveUninitialized: true,\n    secret: credentials.cookieSecret,\n\n}));\napp.set('port', process.env.PORT || 8081);\napp.use(express.static(__dirname + '/public'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(expressJWT({secret: credentials.jwtSecret}).unless({\n    path: ['/login',\n        '/retrieve_password',\n        '/activate_account',\n        '/user/new',\n        '/protected',\n        /^\\/test/i]}));\napp.get('/', (req, res) => {\n    if (!req.user) return res.redirect('/login');\n    res.send(\"Welcome dude !!!\");\n});\napp.get('/login', (req, res) => {\n    res.send(\"login page\");\n});\napp.post('/login', user.userLogin);\napp.get('/user', user.viewAll);\napp.post('/user/new', user.create);\napp.get('/register', user.renderForm);\napp.get('/test/login/:login', user.checkLogin);\napp.get('/test/email/:email', user.checkEmail);\napp.post('/change_password', user.changePassword);\napp.post('/retrieve_password', user.retrievePassword);\napp.post('/activate_account', user.isVerified);\napp.post('/delete', user.Delete);\napp.use((err, req, res, next) => {\n    if (err.name === 'UnauthorizedError') {\n        res.redirect('/login');\n    }\n});\napp.use((req, res) =>{\n    res.type('text/html');\n    res.status(404);\n    res.send('Error 404');\n});\napp.use((err, req, res) =>{\n    console.error(err.stack);\n    res.status(500);\n    res.send('Error 500');\n});\napp.listen(app.get('port'), () => {\n    console.log('Express started on http://localhost:' + app.get('port') + ' press Ctrl-C to terminate');\n});"]}